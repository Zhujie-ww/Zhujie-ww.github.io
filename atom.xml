<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xblearncs</title>
  
  <subtitle>Never Stop Going!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhujie-ww.github.io/"/>
  <updated>2020-04-11T14:33:18.036Z</updated>
  <id>https://zhujie-ww.github.io/</id>
  
  <author>
    <name>xiaobai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>机器学习/慕课网线性代数</title>
    <link href="https://zhujie-ww.github.io/posts/1000/"/>
    <id>https://zhujie-ww.github.io/posts/1000/</id>
    <published>2020-04-06T03:11:31.666Z</published>
    <updated>2020-04-11T14:33:18.036Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>3434</p><p>‘<script type="math/tex">E=m</script>‘<br>1.This is an example: ‘$ f<i>i = f<i>{i + 1}$’<br>//此处mark标签最好不要这么写！</i></i></p><i><i><p>2.This is an example: <code>$f_i = f_{i + 1}$</code></p><p>3.This is an example: </p><p>4.$f_i = f_{i + 1}$</p><p>5.<code>$\sigma$</code><br>:kissing: :smile:<br>:hushed:<br>概述：$g(f(x))$<br>6.This is an example: <code>$f_i = f_{i + 1}$</code></p><p>7.This is an example: $f_i = f_{i + 1}$<br>:kissing: :smile:V<br>:hushed:<br>8.概述：<code>$ g(f(x)) $</code></p><p>1、线性代数研究一组数，即向量，以及向量的“函数”-矩阵；</p><p>//一组数更能真实模拟与描述我们的三维世界，单变量函数不精确；<br>2、机器学习学习方法：不一定要学透数学再学机器学习，</p><p>可以先实战、先入门然后有目的的补数学，带着目标学习；</p><p>3、机器学习需要：高数、线代、统计学（最重要）、凸优化</p><p>//花书：深度学习圣经：</p><p><a href="http://www.deeplearningbook.org/；" target="_blank" rel="noopener">http://www.deeplearningbook.org/；</a></p><p>4、一手资源几乎全是英语，建议平时加强英语学习；</p><blockquote><p>  向量</p></blockquote><p>1、向量：</p><p>① 起源：表示方向的有向线段，物理中速度、加速度；</p><p>② 与起点无关，默认从0,0开始；</p><p>③ 向量=点/有向线段；</p><p>④ 分类；行、列向量；</p><p>⑤ 向量加法：先走a在走b等价于先走b后走a；</p><p>//向量（5,2）先向x走5再向y走2；</p><p>⑥ 计算机科学常用证明方法：反证法、归纳法；</p><p>⑦ 向量内积：三角形借助余弦定理求出,定义为内积;</p><p>// 内积几何意义：投影</p><p>⑧ 点乘的应用：判断两个向量的相似程度（推荐系统）：</p><p>//推荐相似的物品，每一个物品都是高位空间的点（电影价格、导演、评分、主演）</p><p>每两个电影有夹角，锐角—-相似；垂直：无关；<br><img src="https://cdn.jsdelivr.net/gh/Zhujie-ww/zhujie-ww.github.io/loading.gif" data-original="/medias/cover.jpg" alt="向量图解>~o~<"><br>如果点乘越大正：完全重合；</p><blockquote><p>  矩阵</p></blockquote><p>1、矩阵的几种理解：</p><p>① 矩阵=数表，工资表;</p><p>② 矩阵=线性系统（线性方程组），</p><p>如经济系统，网络中交通网络、信息网络，电路系统中电阻等式；化学系统中等式问题；</p><p>③ 矩阵乘法：行点乘，列组合；</p><p>④ 矩阵乘法：相当于向量的函数；</p><p>⑤ 矩阵=空间</p><p>--&gt;&gt;列向量-第一列=基坐标1，第二列=基坐标2，张成新空间；</p><p>//表示新的空间中点的新坐标；</p><p>⑥ 矩阵=线性变换—恒纵坐标拉伸旋转变换；</p><p>--&gt;可以直接写出翻转旋转的空间坐标（不能表示平移变换，因此引入仿射变换概念）；</p><p>⑦ 初等矩阵=初等变换；</p><p>2、求解矩阵的逆：</p><p>方法：A/E初等行变换，</p><p>电算步骤：高斯（从上到下）-约旦（从下至上）方法；</p><p>//本质：高斯-约旦消元法等价于找到一系列初等矩阵使得：</p><p>E1*E2*EK=A；</p><p>所以：求逆矩阵=求逆变换；</p><p>3、矩阵的逆重要性：</p><p>① ，如果A可逆直接求出,</p><p>//特别适合于：A不变，b有很多个的情况，此时可以复用；</p><p>4、矩阵的分解：LU分解</p><p>① 分解目的：提高计算效率；</p><p>② 含义： L：单位下三角-主对角线为1；</p><blockquote><p>  U：上三角；</p></blockquote><p>③方法：高斯消元；</p><p>//高斯消元本质：初等变换为一个上三角矩阵；</p><p>，;；</p><p>④时间复杂度：O（）（即求解L矩阵的次数）</p><p>证明：左下方：</p><p>第一列下n-1个数字，每个数字需要操作n个数字（一行所有元素都要变化）</p><p>所以：(1+2+n-1)*n=O（）;</p><p>⑤ 作用：求解线性方程组：</p><p>第一步：LUx=b,Ly=b先求出y，此时复杂度为O(n\^2/2)，</p><p>（因为下三角且为1每行只需要操作1所在元素，其他全为0）；</p><p>第二步：再次求解Ux=y，利用转置（或者约旦消元）可以求得（O（n\^2））；</p><p>--T=O(N\^3/2)+2*O(N\^2)</p><p>⑥ 高效证明：</p><p>求解逆矩阵：利用初等变换：为：</p><p>[2n*（n-1）+2n*1]*2=O(2N\^3);</p><p>在加上A\^-1*b需要O(2N\^2)</p><p>T2=O(2N\^3)+O(2N\^2)；</p><p>所以LU分解性能优化；</p><p>⑦ 其他分解：</p><p>Case1：由于U主对角线不为1，有时候不方便，因此考虑LDU分解，也就是把U初等变换为单位上三角；</p><p>Case2：如果不能进行LU分解，那么分解为PLU矩阵，将L换成PL，处理行交换矩阵；</p><p>--P为置换矩阵；</p><blockquote><p>  向量空间</p></blockquote><p>1、空间=一个集合；</p><p>2、特殊的向量空间：</p><p>欧几里得空间（）：有序实数元祖的集合（点集集合），n维空间的点；</p><p>如(5,66),(4,34,77.67)；</p><p>3、向量空间：元素为”向量”的集合（空间）；</p><p>什么是向量：不只是欧几里得中的有向点，定义两种运算：加法与数量乘法—&gt;&gt;</p><p>同时还需要满足十条性质：</p><p>①封闭性：ku+v属于向量空间V（满足加法和数乘封闭）；</p><p>//例如整数对于加法封闭，除法不封闭；</p><p>② 交换律、结合律、存在0向量属于向量空间；</p><p>什么是向量空间：欧几里得空间R\^N+其他空间；</p><p>广义向量空间：{所有2*2方阵，所有m*n矩阵；</p><blockquote><p>  所有多项式构成向量空间；所有某类函数构成向量空间}；</p></blockquote><p>反例</p><p>//所有这种矩阵不组成向量空间；</p><p>4、维度：一个空间的极大无关组（基）的向量的个数；</p><p>//元素有几个数字，个数就是维度（错误:应当是极大无关组）；</p><p>特别的三维空间的过原点的平面，定义其维度为2；</p><p>5、</p><p>① 行空间为n维空间的子集；列空间为m维空间的子集；</p><p>② 求法：高斯行变换为最简形的非0行数=行秩=行空间的维度；</p><p>③ 秩为矩阵的秩，维度为向量空间的维度；</p><p>④ 同理列空间的极大无关组一般通过初等行变换得到RREF型求解；</p><blockquote><p>  列空间的基为化简后对应的原来的矩阵的列；</p></blockquote><p>⑤ 区分向量空间的维度和向量的维度；</p><p>⑥ Ra行=Rb列；所以行空间与列空间的维度相等；</p><p>6、零空间：</p><p>① 定义：齐次线性方程组的所有解向量形成一个向量空间，称为0空间；</p><p>矩阵A的零空间就是AX=0中所有x组成的空间；</p><p>② 深入理解0空间：</p><blockquote><p>  view1：A=函数变换：所有向量在矩阵A变换下映射到零点；</p></blockquote><p>view2：A=系统：Ax=0所有解组成的空间；</p><p>view3：A=空间：零空间是一个集合，</p><p>其中所有向量与A行向量点乘为0,A的0空间正交于A的行空间；</p><p>③<br>空间正交：任意两个向量垂直；如直线垂直平面，但是平面垂直平面不行（公共线不垂直）</p><p>-—两个二维平面（空间）在三维空间不正交，在4维正交；</p><p>④ 0空间的维度？</p><p>n-RA:原因：非自由列有ra个，剩下的为自由列，也就是解的列空间个数；</p><p>秩+零化度（0空间的维度）=n</p><p>7、子空间：</p><p>① 定义：向量空间V的子集S并且S还是一个向量空间；</p><p>或者：S为V空间：S为向量空间V子集同时对加法、数乘封闭；</p><p>如平面xoy上过原点的直线（不能是射线）为其子空间，不过原点就不是子空间（不包含0向量）；</p><p>② 举例：</p><p>如三维空间，原点，过原点直线，过原点平面都是子空间；</p><p>--推而广之n为空间；</p><p>③ 子空间关系：</p><p>列空间：col(A) r=a</p><p>行空间：col（A\^T）r=ra</p><p>右0空间：NULL（A）r=n-ra</p><p>//正交于行空间；</p><p>左0空间：Null（A\^T）r=n-ra</p><p>//正交于列空间；</p><p>④ 子空间作用：降维：</p><p>AX=b，方程组个数太多（采集很多样本）很容易无解；</p><p>于是对于Ax（表示矩阵A的列（向量组成的）空间）再取求解离A列空间离b最近的b’,求解Ax=b’;</p><p>//这就是最小二乘法的思路！</p><blockquote><p>  施密特正交化</p></blockquote><p>1、二维情形：</p><p>问题：</p><p>已知u，v求垂直于u的向量</p><p>解法：</p><p>v垂直于u的投影向量可以求出为p，那么v-p向量必然垂直于u</p><p>所以：</p><p>就是所求的垂直向量；</p><p>2、三维：</p><p>a,b,c：任选两个a,b—u,v施法正交，第三个c投影到二维平面(uov)求第三个基，为方便求解，根据立体几何知识只需要在c投影到u,v二轴，求出投影向量k，然后c-k=w即可；</p><blockquote><p>  分解</p></blockquote><p>1、矩阵QR分解：</p><p>① 含义：Q:标准正交矩阵；R（上三角矩阵）</p><p>② 用途：解方程组：</p><p>因为右边好求，R为三角阵也好求，所以简化线性方程组求解办法；</p><p>③ 如何求解Q,R?</p><p>方法1：求法：借助施法正交等式，求出与的关系；</p><p>A=(a1,a2,an)，施法正交为p1,p2,pn,规范化为q1,q2,qn</p><p>那么：(p1)*q1=p1=a1—-a1=r11p1;</p><p>(p2)*q2=p2=a2-a2*p1/(pi\^2)*p1—-a2=r21q1+r22q2;</p><p>所以：</p><p>方法2：实际使用的最多还是：</p><blockquote><p>  基、坐标变换</p></blockquote><p>1、点的坐标以一组基为标准，</p><p>（</p><p>坐标的值为对应基的线性组合的系数；</p><p>2、标准基:</p><p>含义：</p><p>即:标准坐标系；</p><p>3、标准正交基和标准基；</p><p>前者为单位正交向量组，后者特指标准坐标系的基向量；</p><p>4、坐标系转换：</p><p>桥梁：，（直观理解：条条大路走到该点）；</p><p>举例：</p><blockquote><p>  线性变换</p></blockquote><p>1、线性变换：</p><p>定义：</p><p>条件：</p><p>//特别的：在欧几里得空间中，矩阵=线性变换；</p><blockquote><p>  此时：；</p></blockquote><p>2、不同维度空间的变化：3D到2D动画；计算机视觉：2D-&gt;3D；</p><p>同维度：数据压缩—-新的基中y方向差别很小，降维为x一维，</p><p>如jpeg、傅里叶变换都是找新基，得到新特征；</p><blockquote><p>  行列式</p></blockquote><p>1、行列式：方阵的一个属性；</p><p>行列式表示向量组在空间的有向体积！</p><p>2、行列式电算：</p><p>高斯消元法化为上三角（注意不能倍乘、交换），主对角线出现0就是0；</p><p>特征值，特征向量：</p><p>1、特征值、特征向量：方阵的一个属性；</p><p>① 定义：</p><p>② 特征空间即：{}∪{λ的特征向量}，即A-λI的零空间；</p><p>2、投影变换：</p><p>① 投影变换为线性变换，对应一个矩阵，即：矩阵=投影变换=线性变换；</p><p>特征向量：经过投影变换后的向量与原来的向量在同一直线的向量；</p><p>如</p><p>表示翻转变化，关于y=x对称，此时特征向量为y=x上向量，对应特征值为1，；</p><p>而y=-x上向量翻转后对应λ为-1的特征向量；</p><p>② 复数：</p><p>基坐标来看是旋转，直观理解没有特征向量，更不用说特征值，求出λ为复数；</p><p>③ 任意：</p><p>单位矩阵：A=I，特征值为1，特征向量为任何向量，基为；</p><p>④ 代数重数大于等于几何重数（特征空间的维度）；</p><p>3、矩阵相似：；</p><p>① 几何解释：P是一个坐标系，A变换是P坐标系下观察的B变换；</p><p>② 类似于相似三角形；</p><p>③ A和B本质是一个变换，只不过观察的坐标系不同；</p><p>④ 特例：表示A变换在P坐标系下观察到的变换；</p><p>//应用：求方阵的幂；</p><p>⑤ 为什么求矩阵的幂？</p><p>动态系统：中的特征值反应系统各个分量的变化速率；</p><blockquote><p>  对称阵与奇异值</p></blockquote><p>1、对称阵：;</p><p>① 特征值一定是实数！并且一定可以相似对角化—几何重数一定等于代数重数；</p><p>② 不同特征值对应特征向量正交；</p><p>③ 对称阵一定可以正交变换为对角阵；</p><p>2、奇异值：如果有，那么为对称方阵，可正交对角化</p><p>有（已规范化）</p><p>其中为A的i列*A的j列；</p><p>那么：</p><p>① ，表示矩阵的奇异值；</p><p>② 奇异值表示即向量的长度；</p><p>③ 表示的列空间的一组正交基，；</p><p>④ 注意事项：奇异值是对于矩阵而言，特征值是对于而言，</p><p>A的奇异值为的特征值开根号！</p><p>⑤ 如果有个不等于0，</p><p>那么组成的列空间的一组正交基，</p><blockquote><p>  且：，</p></blockquote><p>那么：表示的列空间的一组标准正交基；</p><p>3、分解：对矩阵没有限制</p><p>① 矩阵的奇异值分解（不是矩阵的分解）：</p><p>② 形式：</p><p>其中：，为标准正交阵；</p><p>是的特征向量进行标准化之后的矩阵（标准正交矩阵）；</p><p>Σ：奇异值矩阵：</p><p>其中：；</p><p>③ 证明</p><p>④ 算法过程：</p><p>S1:求解特征值、特征向量；</p><p>S2:奇异值从大到小排序，得到Σ；</p><p>S3:特征向量标准化得到矩阵；</p><p>S4:求出（≠0），然后施法拓展；</p><p>⑤ 分解应用：</p><p>应用1： 对一个维列向量变换：</p><p>几何意义：原来的在基坐标下坐标为，经过变换后，在坐标系下为对进行奇异值倍拉伸；</p><p>举例：圆—变换为-椭圆；</p><p>应用2：</p><p>几何意义：矩阵可以看成多个递降权值的矩阵；</p><p>//因此可以进行（图像）矩阵压缩、降噪、降维，保留大的奇异值的矩阵；</p><p>应用3： 应用于推荐系统、、搜索引擎；</p><p>4、最后展望；</p><p>1、统计学：PCA，最小二乘法；</p><p>微积分：差分方程、微分方程；</p><p>2、机器学习、推荐系统、图像学、经济学；</p><p>3、对领域感兴趣去学习，再补数学，有目的；</p></i></i><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="机器学习" scheme="https://zhujie-ww.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="线性代数" scheme="https://zhujie-ww.github.io/tags/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>helloworld</title>
    <link href="https://zhujie-ww.github.io/posts/1300/"/>
    <id>https://zhujie-ww.github.io/posts/1300/</id>
    <published>2020-04-05T12:56:59.849Z</published>
    <updated>2020-04-11T14:51:43.554Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><pre class=" language-lang-c"><code class="language-lang-c">int main (void){printf("hello ，world！")return 0;}</code></pre><p>$ y=f(x)$</p><p>int main (void){<br>printf(“hello ，world！”)<br>return 0;<br>}</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
